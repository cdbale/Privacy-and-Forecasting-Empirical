## Author: Cameron Bale
library(tidyverse)
library(ggplot2)
library(ggpubr)
library(gridExtra)
library(entropy)
###################################################################
KLcalc <- function(x1,x2){
# density estimates
y1d <- density(x1, from=min(min(x1), min(x2)), to=max(max(x1), max(x2)))
y2d <- density(x2, from=min(min(x1), min(x2)), to=max(max(x1), max(x2)))
# density estimates
y1 <- density(x1, from=min(min(x1), min(x2)), to=max(max(x1), max(x2)), bw=min(y1d$bw,y2d$bw))$y
y2 <- density(x2, from=min(min(x1), min(x2)), to=max(max(x1), max(x2)), bw=min(y1d$bw,y2d$bw))$y
# convert to probabilities
y1 <- y1/sum(y1)
y2 <- y2/sum(y2)
# fix division by 0 issue
y1 <- y1 + .Machine$double.eps
y2 <- y2 + .Machine$double.eps
kl <- round(KL.Dirichlet(y1, y2, a1=0, a2=0, unit="log2"),3)
ent <- entropy.Dirichlet(y1, a=0, unit="log2")
info <- round(kl*100/ent,2)
return(list(kl=kl,ent=ent,info=info))
}
###################################################################
# import the features from protected data
# combine into one dataframe, with indicators for privacy method and parameter
file_names <- grep("tsfeatures", list.files("../../Data/Train/Clean/tsfeatures/"), value=TRUE, invert=TRUE)
file_names <- grep("h1_", file_names, value=TRUE)
# read in the original time series features
orig_features <- read_csv("../../Data/Train/Clean/tsfeatures/tsfeatures_h1.csv")
