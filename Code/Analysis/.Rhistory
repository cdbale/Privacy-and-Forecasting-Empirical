m3_sorted_names <- m3_avg_evals$feature
## note that you have to manually type out the feature names in the
## correct order to have them 'nicely' formatted. The order changes
## slightly based on different runs of k-nTS+
m3_relief_plot <- m3_avg_evals %>%
mutate(feature=factor(feature,
levels=m3_sorted_names)) %>%
ggplot(aes(x=feature, y=avg_value)) +
ylim(-0.25, 0.6) +
geom_col() +
coord_flip() +
labs(x = "Feature",
y = "RReliefF Weight",
title = "M3 Data") +
scale_x_discrete(labels=c("Spike",
"Max Variance Shift",
"Curvature",
"Variance",
"Max Level Shift",
"Linearity",
"Cross Correlation 1",
"Mean",
"Max KL Shift",
"Time Level Shift",
"Time KL Shift",
"Cross Correlation 2",
"Cross Correlation 3",
"Skewness",
"Peak",
"Kurtosis",
"Cross Correlation 4",
"Trough",
"Lumpiness",
"Cross Correlation 5",
"Time Variance Shift",
"Unitroot PP",
"X ACF",
"Seasonal ACF",
"Hurst",
"Flat Spots",
"Trend",
"Unitroot KPSS",
"Second Difference PACF5",
"Seasonal PACF",
"Crossing Points",
"Second Difference ACF10",
"First Difference ACF10",
"First Difference PACF5",
"Error ACF10",
"Second Difference ACF",
"Seasonal Strength",
"Error ACF",
"Stability",
"Nonlinearity",
"First Difference ACF",
"X PACF5",
"X ACF10",
"Spectral Entropy"))
# theme(plot.title = element_text(size=14, face= "bold", colour= "black" ),
#       axis.title.x = element_text(size=13, face="bold", colour = "black"),
#       axis.title.y = element_text(size=13, face="bold", colour = "black"))
m3_rate_relief_plot <- m3_rate_avg_evals %>%
mutate(feature=factor(feature,
levels=m3_sorted_names)) %>%
ggplot(aes(x=feature, y=avg_value)) +
ylim(-0.25, 0.6) +
geom_col() +
coord_flip() +
labs(x = "",
y = "RReliefF Weight",
title = "M3 Rate Data") +
scale_x_discrete(labels=c("Spike",
"Max Variance Shift",
"Curvature",
"Variance",
"Max Level Shift",
"Linearity",
"Cross Correlation 1",
"Mean",
"Max KL Shift",
"Time Level Shift",
"Time KL Shift",
"Cross Correlation 2",
"Cross Correlation 3",
"Skewness",
"Peak",
"Kurtosis",
"Cross Correlation 4",
"Trough",
"Lumpiness",
"Cross Correlation 5",
"Time Variance Shift",
"Unitroot PP",
"X ACF",
"Seasonal ACF",
"Hurst",
"Flat Spots",
"Trend",
"Unitroot KPSS",
"Second Difference PACF5",
"Seasonal PACF",
"Crossing Points",
"Second Difference ACF10",
"First Difference ACF10",
"First Difference PACF5",
"Error ACF10",
"Second Difference ACF",
"Seasonal Strength",
"Error ACF",
"Stability",
"Nonlinearity",
"First Difference ACF",
"X PACF5",
"X ACF10",
"Spectral Entropy"))
# theme(plot.title = element_text(size=14, face= "bold", colour= "black" ),
#       axis.title.x = element_text(size=13, face="bold", colour = "black"),
#       axis.title.y = element_text(size=13, face="bold", colour = "black"))
combined_rrelief_plot <- ggarrange(m3_relief_plot, m3_rate_relief_plot)
print(combined_rrelief_plot)
if (file.exists(paste0("../../Outputs/Figures/M3/"))){
ggsave(filename="M3_RReliefF_Weights.pdf", plot=combined_rrelief_plot, path="../../Outputs/Figures/M3/")
} else {
dir.create(paste0("../../Outputs/Figures/M3/"), recursive=TRUE)
ggsave(filename="M3_RReliefF_Weights.pdf", plot=combined_rrelief_plot, path="../../Outputs/Figures/M3/")
}
if (file.exists(paste0("../../Outputs/Figures/M3/"))){
ggsave(filename="M3_RReliefF_Weights.pdf", plot=combined_rrelief_plot, path="../../Outputs/Figures/M3/",
width=7.85, height=7)
} else {
dir.create(paste0("../../Outputs/Figures/M3/"), recursive=TRUE)
ggsave(filename="M3_RReliefF_Weights.pdf", plot=combined_rrelief_plot, path="../../Outputs/Figures/M3/",
width=7.85, height=7)
}
if (file.exists(paste0("../../Outputs/Figures/M3/"))){
ggsave(filename="M3_RReliefF_Weights.pdf", plot=combined_rrelief_plot, path="../../Outputs/Figures/M3/",
width=8, height=7)
} else {
dir.create(paste0("../../Outputs/Figures/M3/"), recursive=TRUE)
ggsave(filename="M3_RReliefF_Weights.pdf", plot=combined_rrelief_plot, path="../../Outputs/Figures/M3/",
width=8, height=7)
}
m3_oob_directory <- "../../Outputs/RFE OOB/M3/"
m3_rate_oob_directory <- "../../Outputs/RFE OOB/M3_rate/"
m3_oob_files <- list.files(m3_oob_directory)
m3_rate_oob_files <- list.files(m3_rate_oob_directory)
m3_full_oob <- tibble()
m3_rate_full_oob <- tibble()
for (f in m3_oob_files){
temp <- read_csv(paste0(m3_oob_directory, f)) %>%
mutate(data_set = strsplit(f, "_")[[1]][2],
data_subset = strsplit(f, "_")[[1]][3])
m3_full_oob <- bind_rows(m3_full_oob, temp)
}
for (f in m3_rate_oob_files){
temp <- read_csv(paste0(m3_rate_oob_directory, f)) %>%
mutate(data_set = strsplit(f, "_")[[1]][3],
data_subset = strsplit(f, "_")[[1]][4])
m3_rate_full_oob <- bind_rows(m3_rate_full_oob, temp)
}
m3_monthly_micro_oob <- m3_full_oob %>%
filter(data_set == "monthly-MICRO", data_subset == "1")
m3_rate_monthly_micro_oob <- m3_rate_full_oob %>%
filter(data_set == "monthly-MICRO", data_subset == "1")
m3_oob_plot <- m3_monthly_micro_oob %>%
ggplot(aes(x=num_features, y=value, color=model)) +
geom_line() +
geom_point() +
ylim(0.0, 0.85) +
xlim(0.0, 33) +
labs(x = "Number of Features",
y = "OOB MAE",
title = "M3 Data",
color = "Model")
m3_rate_oob_plot <- m3_rate_monthly_micro_oob %>%
ggplot(aes(x=num_features, y=value, color=model)) +
geom_line() +
geom_point() +
ylim(0.0, 0.85) +
xlim(0.0, 33) +
labs(x = "Number of Features",
y = "",
title = "M3 Rate Data",
color = "Model")
combined_oob_plot <- ggarrange(m3_oob_plot, m3_rate_oob_plot)
print(combined_oob_plot)
if (file.exists(paste0("../../Outputs/Figures/M3/"))){
ggsave(filename="M3_OOB.pdf", plot=combined_oob_plot, path="../../Outputs/Figures/M3/")
} else {
dir.create(paste0("../../Outputs/Figures/M3/"), recursive=TRUE)
ggsave(filename="M3_OOB.pdf", plot=combined_oob_plot, path="../../Outputs/Figures/M3/")
}
m3_rfe_directory <- "../../Outputs/RFE Rankings/M3/"
m3_rate_rfe_directory <- "../../Outputs/RFE Rankings/M3_rate/"
m3_rfe_files <- list.files(m3_rfe_directory)
m3_rate_rfe_files <- list.files(m3_rate_rfe_directory)
m3_full_rfe <- tibble()
m3_rate_full_rfe <- tibble()
for (f in m3_rfe_files){
temp <- read_csv(paste0(m3_rfe_directory, f)) %>%
mutate(data_set = strsplit(f, "_")[[1]][2],
data_subset = strsplit(f, "_")[[1]][3])
m3_full_rfe <- bind_rows(m3_full_rfe, temp)
}
for (f in m3_rate_rfe_files){
temp <- read_csv(paste0(m3_rate_rfe_directory, f)) %>%
mutate(data_set = strsplit(f, "_")[[1]][3],
data_subset = strsplit(f, "_")[[1]][4])
m3_rate_full_rfe <- bind_rows(m3_rate_full_rfe, temp)
}
avg_m3_rfe_evals <- m3_full_rfe %>%
group_by(data_set, data_subset, var) %>%
summarize(avg_rank = mean(rank), .groups='drop') %>%
arrange(data_set, data_subset, avg_rank)
avg_m3_rate_rfe_evals <- m3_rate_full_rfe %>%
group_by(data_set, data_subset, var) %>%
summarize(avg_rank = mean(rank), .groups='drop') %>%
arrange(data_set, data_subset, avg_rank)
# for each data subset, calculate how many features were needed to achieve
# the minimum MAE
m3_ns <- m3_full_oob %>%
group_by(data_set, data_subset, model) %>%
mutate(min_error = min(value)) %>%
ungroup() %>%
filter(value == min_error) %>%
group_by(data_set, data_subset) %>%
summarize(ns = floor(mean(num_features)), .groups='drop')
m3_rate_ns <- m3_rate_full_oob %>%
group_by(data_set, data_subset, model) %>%
mutate(min_error = min(value)) %>%
ungroup() %>%
filter(value == min_error) %>%
group_by(data_set, data_subset) %>%
summarize(ns = floor(mean(num_features)), .groups='drop')
# what are the minimum and maximum numbers of features selected
m3_ns %>%
summarize(min_n = min(ns),
max_n = max(ns))
m3_rate_ns %>%
summarize(min_n = min(ns),
max_n = max(ns))
avg_m3_rfe_evals <- avg_m3_rfe_evals %>%
mutate(combined_data = paste0(data_set, "-", data_subset))
avg_m3_rate_rfe_evals <- avg_m3_rate_rfe_evals %>%
mutate(combined_data = paste0(data_set, "-", data_subset))
data_levels <- unique(avg_m3_rfe_evals$combined_data)
data_levels <- data_levels[-16]
data_levels <- c(data_levels, "other-OTHER-1")
m3_sf <- avg_m3_rfe_evals %>%
left_join(m3_ns, by=c("data_set", "data_subset")) %>%
group_by(data_set, data_subset) %>%
mutate(var_order = 1:n(),
is_selected = factor(ifelse(var_order <= ns, 1, 0), levels=c(0, 1), labels=c("No", "Yes")),
combined_data = factor(combined_data,
levels = data_levels,
labels = c("Monthly Demographic 1",
"Monthly Demographic 2",
"Monthly Finance 1",
"Monthly Finance 2",
"Monthly Industry 1",
"Monthly Industry 2",
"Monthly Industry 3",
"Monthly Macro 1",
"Monthly Macro 2",
"Monthly Macro 3",
"Monthly Micro 1",
"Monthly Micro 2",
"Monthly Micro 3",
"Monthly Other 1",
"Monthly Other 2",
"Quarterly Finance",
"Quarterly Macro 1",
"Quarterly Macro 2",
"Quarterly Macro 3",
"Quarterly Micro 1",
"Quarterly Micro 2",
"Yearly Demographic 1",
"Yearly Demographic 2",
"Yearly Demographic 3",
"Yearly Demographic 4",
"Yearly Finance",
"Yearly Industry",
"Yearly Macro",
"Yearly Micro",
"Other Other")),
var = factor(var,
levels = m3_sorted_names,
labels=c("Spike",
"Max Variance Shift",
"Curvature",
"Variance",
"Max Level Shift",
"Linearity",
"Cross Correlation 1",
"Mean",
"Max KL Shift",
"Time Level Shift",
"Time KL Shift",
"Cross Correlation 2",
"Cross Correlation 3",
"Skewness",
"Peak",
"Kurtosis",
"Cross Correlation 4",
"Trough",
"Lumpiness",
"Cross Correlation 5",
"Time Variance Shift",
"Unitroot PP",
"X ACF",
"Seasonal ACF",
"Hurst",
"Flat Spots",
"Trend",
"Unitroot KPSS",
"Second Difference PACF5",
"Seasonal PACF",
"Crossing Points",
"Second Difference ACF10",
"First Difference ACF10",
"First Difference PACF5",
"Error ACF10",
"Second Difference ACF",
"Seasonal Strength",
"Error ACF",
"Stability",
"Nonlinearity",
"First Difference ACF",
"X PACF5",
"X ACF10",
"Spectral Entropy")))
m3_rate_sf <- avg_m3_rate_rfe_evals %>%
left_join(m3_rate_ns, by=c("data_set", "data_subset")) %>%
group_by(data_set, data_subset) %>%
mutate(var_order = 1:n(),
is_selected = factor(ifelse(var_order <= ns, 1, 0), levels=c(0, 1), labels=c("No", "Yes")),
combined_data = factor(combined_data,
levels = data_levels,
labels = c("Monthly Demographic 1",
"Monthly Demographic 2",
"Monthly Finance 1",
"Monthly Finance 2",
"Monthly Industry 1",
"Monthly Industry 2",
"Monthly Industry 3",
"Monthly Macro 1",
"Monthly Macro 2",
"Monthly Macro 3",
"Monthly Micro 1",
"Monthly Micro 2",
"Monthly Micro 3",
"Monthly Other 1",
"Monthly Other 2",
"Quarterly Finance",
"Quarterly Macro 1",
"Quarterly Macro 2",
"Quarterly Macro 3",
"Quarterly Micro 1",
"Quarterly Micro 2",
"Yearly Demographic 1",
"Yearly Demographic 2",
"Yearly Demographic 3",
"Yearly Demographic 4",
"Yearly Finance",
"Yearly Industry",
"Yearly Macro",
"Yearly Micro",
"Other Other")),
var = factor(var,
levels = m3_sorted_names,
labels=c("Spike",
"Max Variance Shift",
"Curvature",
"Variance",
"Max Level Shift",
"Linearity",
"Cross Correlation 1",
"Mean",
"Max KL Shift",
"Time Level Shift",
"Time KL Shift",
"Cross Correlation 2",
"Cross Correlation 3",
"Skewness",
"Peak",
"Kurtosis",
"Cross Correlation 4",
"Trough",
"Lumpiness",
"Cross Correlation 5",
"Time Variance Shift",
"Unitroot PP",
"X ACF",
"Seasonal ACF",
"Hurst",
"Flat Spots",
"Trend",
"Unitroot KPSS",
"Second Difference PACF5",
"Seasonal PACF",
"Crossing Points",
"Second Difference ACF10",
"First Difference ACF10",
"First Difference PACF5",
"Error ACF10",
"Second Difference ACF",
"Seasonal Strength",
"Error ACF",
"Stability",
"Nonlinearity",
"First Difference ACF",
"X PACF5",
"X ACF10",
"Spectral Entropy")))
m3_selected_grid <- m3_sf %>%
ggplot(aes(x=combined_data, y=var, fill=as.factor(is_selected))) +
geom_tile(color = "white",
lwd = 1,
linetype = 1) +
coord_fixed() +
labs(x = "Data Subset",
y = "Feature",
fill = "Selected",
title="M3 Data") +
theme(axis.text.x = element_text(angle=90, vjust=0.5, hjust=1),
legend.position = "bottom")
m3_rate_selected_grid <- m3_rate_sf %>%
ggplot(aes(x=combined_data, y=var, fill=as.factor(is_selected))) +
geom_tile(color = "white",
lwd = 1,
linetype = 1) +
coord_fixed() +
labs(x = "Data Subset",
y = "",
fill = "Selected",
title="M3 Rate Data") +
theme(axis.text.x = element_text(angle=90, vjust=0.5, hjust=1),
legend.position = "bottom")
m3_feature_grid_plot <- ggarrange(m3_selected_grid, m3_rate_selected_grid)
print(m3_feature_grid_plot)
if (file.exists(paste0("../../Outputs/Figures/M3/"))){
ggsave(filename="M3_RFE_selection.pdf", plot=m3_feature_grid_plot, path="../../Outputs/Figures/M3/")
} else {
dir.create(paste0("../../Outputs/Figures/M3/"), recursive=TRUE)
ggsave(filename="M3_RFE_selection.pdf", plot=m3_feature_grid_plot, path="../../Outputs/Figures/M3/")
}
if (file.exists(paste0("../../Outputs/Figures/M3/"))){
ggsave(filename="M3_RFE_selection.pdf", plot=m3_feature_grid_plot, path="../../Outputs/Figures/M3/",
width=8, height=7)
} else {
dir.create(paste0("../../Outputs/Figures/M3/"), recursive=TRUE)
ggsave(filename="M3_RFE_selection.pdf", plot=m3_feature_grid_plot, path="../../Outputs/Figures/M3/",
width=8, height=7)
}
if (file.exists(paste0("../../Outputs/Figures/M3/"))){
ggsave(filename="M3_RFE_selection.pdf", plot=m3_feature_grid_plot, path="../../Outputs/Figures/M3/",
width=8, height=11)
} else {
dir.create(paste0("../../Outputs/Figures/M3/"), recursive=TRUE)
ggsave(filename="M3_RFE_selection.pdf", plot=m3_feature_grid_plot, path="../../Outputs/Figures/M3/",
width=8, height=11)
}
m3_rate_selected_grid <- m3_rate_sf %>%
ggplot(aes(x=combined_data, y=var, fill=as.factor(is_selected))) +
geom_tile(color = "white",
lwd = 1,
linetype = 1) +
coord_fixed() +
labs(x = "Data Subset",
y = "",
fill = "Selected",
title="M3 Rate Data") +
theme(axis.text.x = element_text(angle=90, vjust=0.5, hjust=1),
legend.position = "bottom")
m3_feature_grid_plot <- ggarrange(m3_selected_grid, m3_rate_selected_grid)
print(m3_feature_grid_plot)
if (file.exists(paste0("../../Outputs/Figures/M3/"))){
ggsave(filename="M3_RFE_selection.pdf", plot=m3_feature_grid_plot, path="../../Outputs/Figures/M3/")
} else {
dir.create(paste0("../../Outputs/Figures/M3/"), recursive=TRUE)
ggsave(filename="M3_RFE_selection.pdf", plot=m3_feature_grid_plot, path="../../Outputs/Figures/M3/")
}
m3_rate_selected_grid <- m3_rate_sf %>%
ggplot(aes(x=combined_data, y=var, fill=as.factor(is_selected))) +
geom_tile(color = "white",
lwd = 1,
linetype = 1) +
coord_fixed() +
labs(x = "Data Subset",
y = "",
fill = "Selected",
title="M3 Rate Data") +
theme(axis.text.x = element_text(angle=90, vjust=0.5, hjust=1),
legend.position = "bottom")
m3_feature_grid_plot <- ggarrange(m3_selected_grid, m3_rate_selected_grid)
print(m3_feature_grid_plot)
if (file.exists(paste0("../../Outputs/Figures/M3/"))){
ggsave(filename="M3_RFE_selection.pdf", plot=m3_feature_grid_plot, path="../../Outputs/Figures/M3/",
width=8, height=11)
} else {
dir.create(paste0("../../Outputs/Figures/M3/"), recursive=TRUE)
ggsave(filename="M3_RFE_selection.pdf", plot=m3_feature_grid_plot, path="../../Outputs/Figures/M3/",
width=8, height=11)
}
if (file.exists(paste0("../../Outputs/Figures/M3/"))){
ggsave(filename="M3_RFE_selection.pdf", plot=m3_feature_grid_plot, path="../../Outputs/Figures/M3/",
width=11.1, height=10)
} else {
dir.create(paste0("../../Outputs/Figures/M3/"), recursive=TRUE)
ggsave(filename="M3_RFE_selection.pdf", plot=m3_feature_grid_plot, path="../../Outputs/Figures/M3/",
width=11.1, height=10)
}
